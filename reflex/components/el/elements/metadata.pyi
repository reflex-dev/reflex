"""Stub file for reflex/components/el/elements/metadata.py"""

# ------------------- DO NOT EDIT ----------------------
# This file was generated by `reflex/utils/pyi_generator.py`!
# ------------------------------------------------------
from typing import Any, Dict, Literal, Optional, Union, overload

from reflex.components.el.element import Element
from reflex.event import EventType
from reflex.style import Style
from reflex.vars.base import Var

from .base import BaseHTML

class Base(BaseHTML):
    @overload
    @classmethod
    def create(  # type: ignore
        cls,
        *children,
        href: Optional[Union[Var[str], str]] = None,
        target: Optional[Union[Var[str], str]] = None,
        access_key: Optional[Union[Var[str], str]] = None,
        auto_capitalize: Optional[
            Union[
                Literal["characters", "none", "off", "on", "sentences", "words"],
                Var[Literal["characters", "none", "off", "on", "sentences", "words"]],
            ]
        ] = None,
        content_editable: Optional[
            Union[
                Literal["inherit", "plaintext-only", False, True],
                Var[Literal["inherit", "plaintext-only", False, True]],
            ]
        ] = None,
        context_menu: Optional[Union[Var[str], str]] = None,
        dir: Optional[Union[Var[str], str]] = None,
        draggable: Optional[Union[Var[bool], bool]] = None,
        enter_key_hint: Optional[
            Union[
                Literal["done", "enter", "go", "next", "previous", "search", "send"],
                Var[
                    Literal["done", "enter", "go", "next", "previous", "search", "send"]
                ],
            ]
        ] = None,
        hidden: Optional[Union[Var[bool], bool]] = None,
        input_mode: Optional[
            Union[
                Literal[
                    "decimal",
                    "email",
                    "none",
                    "numeric",
                    "search",
                    "tel",
                    "text",
                    "url",
                ],
                Var[
                    Literal[
                        "decimal",
                        "email",
                        "none",
                        "numeric",
                        "search",
                        "tel",
                        "text",
                        "url",
                    ]
                ],
            ]
        ] = None,
        item_prop: Optional[Union[Var[str], str]] = None,
        lang: Optional[Union[Var[str], str]] = None,
        role: Optional[
            Union[
                Literal[
                    "alert",
                    "alertdialog",
                    "application",
                    "article",
                    "banner",
                    "button",
                    "cell",
                    "checkbox",
                    "columnheader",
                    "combobox",
                    "complementary",
                    "contentinfo",
                    "definition",
                    "dialog",
                    "directory",
                    "document",
                    "feed",
                    "figure",
                    "form",
                    "grid",
                    "gridcell",
                    "group",
                    "heading",
                    "img",
                    "link",
                    "list",
                    "listbox",
                    "listitem",
                    "log",
                    "main",
                    "marquee",
                    "math",
                    "menu",
                    "menubar",
                    "menuitem",
                    "menuitemcheckbox",
                    "menuitemradio",
                    "navigation",
                    "none",
                    "note",
                    "option",
                    "presentation",
                    "progressbar",
                    "radio",
                    "radiogroup",
                    "region",
                    "row",
                    "rowgroup",
                    "rowheader",
                    "scrollbar",
                    "search",
                    "searchbox",
                    "separator",
                    "slider",
                    "spinbutton",
                    "status",
                    "switch",
                    "tab",
                    "table",
                    "tablist",
                    "tabpanel",
                    "term",
                    "textbox",
                    "timer",
                    "toolbar",
                    "tooltip",
                    "tree",
                    "treegrid",
                    "treeitem",
                ],
                Var[
                    Literal[
                        "alert",
                        "alertdialog",
                        "application",
                        "article",
                        "banner",
                        "button",
                        "cell",
                        "checkbox",
                        "columnheader",
                        "combobox",
                        "complementary",
                        "contentinfo",
                        "definition",
                        "dialog",
                        "directory",
                        "document",
                        "feed",
                        "figure",
                        "form",
                        "grid",
                        "gridcell",
                        "group",
                        "heading",
                        "img",
                        "link",
                        "list",
                        "listbox",
                        "listitem",
                        "log",
                        "main",
                        "marquee",
                        "math",
                        "menu",
                        "menubar",
                        "menuitem",
                        "menuitemcheckbox",
                        "menuitemradio",
                        "navigation",
                        "none",
                        "note",
                        "option",
                        "presentation",
                        "progressbar",
                        "radio",
                        "radiogroup",
                        "region",
                        "row",
                        "rowgroup",
                        "rowheader",
                        "scrollbar",
                        "search",
                        "searchbox",
                        "separator",
                        "slider",
                        "spinbutton",
                        "status",
                        "switch",
                        "tab",
                        "table",
                        "tablist",
                        "tabpanel",
                        "term",
                        "textbox",
                        "timer",
                        "toolbar",
                        "tooltip",
                        "tree",
                        "treegrid",
                        "treeitem",
                    ]
                ],
            ]
        ] = None,
        slot: Optional[Union[Var[str], str]] = None,
        spell_check: Optional[Union[Var[bool], bool]] = None,
        tab_index: Optional[Union[Var[int], int]] = None,
        title: Optional[Union[Var[str], str]] = None,
        style: Optional[Style] = None,
        key: Optional[Any] = None,
        id: Optional[Any] = None,
        class_name: Optional[Any] = None,
        autofocus: Optional[bool] = None,
        custom_attrs: Optional[Dict[str, Union[Var, Any]]] = None,
        on_blur: Optional[EventType[()]] = None,
        on_click: Optional[EventType[()]] = None,
        on_context_menu: Optional[EventType[()]] = None,
        on_double_click: Optional[EventType[()]] = None,
        on_focus: Optional[EventType[()]] = None,
        on_mount: Optional[EventType[()]] = None,
        on_mouse_down: Optional[EventType[()]] = None,
        on_mouse_enter: Optional[EventType[()]] = None,
        on_mouse_leave: Optional[EventType[()]] = None,
        on_mouse_move: Optional[EventType[()]] = None,
        on_mouse_out: Optional[EventType[()]] = None,
        on_mouse_over: Optional[EventType[()]] = None,
        on_mouse_up: Optional[EventType[()]] = None,
        on_scroll: Optional[EventType[()]] = None,
        on_unmount: Optional[EventType[()]] = None,
        **props,
    ) -> "Base":
        """Create the component.

        Args:
            *children: The children of the component.
            access_key: Provides a hint for generating a keyboard shortcut for the current element.
            auto_capitalize: Controls whether and how text input is automatically capitalized as it is entered/edited by the user.
            content_editable: Indicates whether the element's content is editable.
            context_menu: Defines the ID of a <menu> element which will serve as the element's context menu.
            dir: Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
            draggable: Defines whether the element can be dragged.
            enter_key_hint: Hints what media types the media element is able to play.
            hidden: Defines whether the element is hidden.
            input_mode: Defines the type of the element.
            item_prop: Defines the name of the element for metadata purposes.
            lang: Defines the language used in the element.
            role: Defines the role of the element.
            slot: Assigns a slot in a shadow DOM shadow tree to an element.
            spell_check: Defines whether the element may be checked for spelling errors.
            tab_index: Defines the position of the current element in the tabbing order.
            title: Defines a tooltip for the element.
            style: The style of the component.
            key: A unique key for the component.
            id: The id for the component.
            class_name: The class name for the component.
            autofocus: Whether the component should take the focus once the page is loaded
            custom_attrs: custom attribute
            **props: The props of the component.

        Returns:
            The component.
        """
        ...

class Head(BaseHTML):
    @overload
    @classmethod
    def create(  # type: ignore
        cls,
        *children,
        access_key: Optional[Union[Var[str], str]] = None,
        auto_capitalize: Optional[
            Union[
                Literal["characters", "none", "off", "on", "sentences", "words"],
                Var[Literal["characters", "none", "off", "on", "sentences", "words"]],
            ]
        ] = None,
        content_editable: Optional[
            Union[
                Literal["inherit", "plaintext-only", False, True],
                Var[Literal["inherit", "plaintext-only", False, True]],
            ]
        ] = None,
        context_menu: Optional[Union[Var[str], str]] = None,
        dir: Optional[Union[Var[str], str]] = None,
        draggable: Optional[Union[Var[bool], bool]] = None,
        enter_key_hint: Optional[
            Union[
                Literal["done", "enter", "go", "next", "previous", "search", "send"],
                Var[
                    Literal["done", "enter", "go", "next", "previous", "search", "send"]
                ],
            ]
        ] = None,
        hidden: Optional[Union[Var[bool], bool]] = None,
        input_mode: Optional[
            Union[
                Literal[
                    "decimal",
                    "email",
                    "none",
                    "numeric",
                    "search",
                    "tel",
                    "text",
                    "url",
                ],
                Var[
                    Literal[
                        "decimal",
                        "email",
                        "none",
                        "numeric",
                        "search",
                        "tel",
                        "text",
                        "url",
                    ]
                ],
            ]
        ] = None,
        item_prop: Optional[Union[Var[str], str]] = None,
        lang: Optional[Union[Var[str], str]] = None,
        role: Optional[
            Union[
                Literal[
                    "alert",
                    "alertdialog",
                    "application",
                    "article",
                    "banner",
                    "button",
                    "cell",
                    "checkbox",
                    "columnheader",
                    "combobox",
                    "complementary",
                    "contentinfo",
                    "definition",
                    "dialog",
                    "directory",
                    "document",
                    "feed",
                    "figure",
                    "form",
                    "grid",
                    "gridcell",
                    "group",
                    "heading",
                    "img",
                    "link",
                    "list",
                    "listbox",
                    "listitem",
                    "log",
                    "main",
                    "marquee",
                    "math",
                    "menu",
                    "menubar",
                    "menuitem",
                    "menuitemcheckbox",
                    "menuitemradio",
                    "navigation",
                    "none",
                    "note",
                    "option",
                    "presentation",
                    "progressbar",
                    "radio",
                    "radiogroup",
                    "region",
                    "row",
                    "rowgroup",
                    "rowheader",
                    "scrollbar",
                    "search",
                    "searchbox",
                    "separator",
                    "slider",
                    "spinbutton",
                    "status",
                    "switch",
                    "tab",
                    "table",
                    "tablist",
                    "tabpanel",
                    "term",
                    "textbox",
                    "timer",
                    "toolbar",
                    "tooltip",
                    "tree",
                    "treegrid",
                    "treeitem",
                ],
                Var[
                    Literal[
                        "alert",
                        "alertdialog",
                        "application",
                        "article",
                        "banner",
                        "button",
                        "cell",
                        "checkbox",
                        "columnheader",
                        "combobox",
                        "complementary",
                        "contentinfo",
                        "definition",
                        "dialog",
                        "directory",
                        "document",
                        "feed",
                        "figure",
                        "form",
                        "grid",
                        "gridcell",
                        "group",
                        "heading",
                        "img",
                        "link",
                        "list",
                        "listbox",
                        "listitem",
                        "log",
                        "main",
                        "marquee",
                        "math",
                        "menu",
                        "menubar",
                        "menuitem",
                        "menuitemcheckbox",
                        "menuitemradio",
                        "navigation",
                        "none",
                        "note",
                        "option",
                        "presentation",
                        "progressbar",
                        "radio",
                        "radiogroup",
                        "region",
                        "row",
                        "rowgroup",
                        "rowheader",
                        "scrollbar",
                        "search",
                        "searchbox",
                        "separator",
                        "slider",
                        "spinbutton",
                        "status",
                        "switch",
                        "tab",
                        "table",
                        "tablist",
                        "tabpanel",
                        "term",
                        "textbox",
                        "timer",
                        "toolbar",
                        "tooltip",
                        "tree",
                        "treegrid",
                        "treeitem",
                    ]
                ],
            ]
        ] = None,
        slot: Optional[Union[Var[str], str]] = None,
        spell_check: Optional[Union[Var[bool], bool]] = None,
        tab_index: Optional[Union[Var[int], int]] = None,
        title: Optional[Union[Var[str], str]] = None,
        style: Optional[Style] = None,
        key: Optional[Any] = None,
        id: Optional[Any] = None,
        class_name: Optional[Any] = None,
        autofocus: Optional[bool] = None,
        custom_attrs: Optional[Dict[str, Union[Var, Any]]] = None,
        on_blur: Optional[EventType[()]] = None,
        on_click: Optional[EventType[()]] = None,
        on_context_menu: Optional[EventType[()]] = None,
        on_double_click: Optional[EventType[()]] = None,
        on_focus: Optional[EventType[()]] = None,
        on_mount: Optional[EventType[()]] = None,
        on_mouse_down: Optional[EventType[()]] = None,
        on_mouse_enter: Optional[EventType[()]] = None,
        on_mouse_leave: Optional[EventType[()]] = None,
        on_mouse_move: Optional[EventType[()]] = None,
        on_mouse_out: Optional[EventType[()]] = None,
        on_mouse_over: Optional[EventType[()]] = None,
        on_mouse_up: Optional[EventType[()]] = None,
        on_scroll: Optional[EventType[()]] = None,
        on_unmount: Optional[EventType[()]] = None,
        **props,
    ) -> "Head":
        """Create the component.

        Args:
            *children: The children of the component.
            access_key: Provides a hint for generating a keyboard shortcut for the current element.
            auto_capitalize: Controls whether and how text input is automatically capitalized as it is entered/edited by the user.
            content_editable: Indicates whether the element's content is editable.
            context_menu: Defines the ID of a <menu> element which will serve as the element's context menu.
            dir: Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
            draggable: Defines whether the element can be dragged.
            enter_key_hint: Hints what media types the media element is able to play.
            hidden: Defines whether the element is hidden.
            input_mode: Defines the type of the element.
            item_prop: Defines the name of the element for metadata purposes.
            lang: Defines the language used in the element.
            role: Defines the role of the element.
            slot: Assigns a slot in a shadow DOM shadow tree to an element.
            spell_check: Defines whether the element may be checked for spelling errors.
            tab_index: Defines the position of the current element in the tabbing order.
            title: Defines a tooltip for the element.
            style: The style of the component.
            key: A unique key for the component.
            id: The id for the component.
            class_name: The class name for the component.
            autofocus: Whether the component should take the focus once the page is loaded
            custom_attrs: custom attribute
            **props: The props of the component.

        Returns:
            The component.
        """
        ...

class Link(BaseHTML):
    @overload
    @classmethod
    def create(  # type: ignore
        cls,
        *children,
        cross_origin: Optional[
            Union[
                Literal["", "anonymous", "use-credentials"],
                Var[Literal["", "anonymous", "use-credentials"]],
            ]
        ] = None,
        href: Optional[Union[Var[str], str]] = None,
        href_lang: Optional[Union[Var[str], str]] = None,
        integrity: Optional[Union[Var[str], str]] = None,
        media: Optional[Union[Var[str], str]] = None,
        referrer_policy: Optional[
            Union[
                Literal[
                    "",
                    "no-referrer",
                    "no-referrer-when-downgrade",
                    "origin",
                    "origin-when-cross-origin",
                    "same-origin",
                    "strict-origin",
                    "strict-origin-when-cross-origin",
                    "unsafe-url",
                ],
                Var[
                    Literal[
                        "",
                        "no-referrer",
                        "no-referrer-when-downgrade",
                        "origin",
                        "origin-when-cross-origin",
                        "same-origin",
                        "strict-origin",
                        "strict-origin-when-cross-origin",
                        "unsafe-url",
                    ]
                ],
            ]
        ] = None,
        rel: Optional[Union[Var[str], str]] = None,
        sizes: Optional[Union[Var[str], str]] = None,
        type: Optional[Union[Var[str], str]] = None,
        access_key: Optional[Union[Var[str], str]] = None,
        auto_capitalize: Optional[
            Union[
                Literal["characters", "none", "off", "on", "sentences", "words"],
                Var[Literal["characters", "none", "off", "on", "sentences", "words"]],
            ]
        ] = None,
        content_editable: Optional[
            Union[
                Literal["inherit", "plaintext-only", False, True],
                Var[Literal["inherit", "plaintext-only", False, True]],
            ]
        ] = None,
        context_menu: Optional[Union[Var[str], str]] = None,
        dir: Optional[Union[Var[str], str]] = None,
        draggable: Optional[Union[Var[bool], bool]] = None,
        enter_key_hint: Optional[
            Union[
                Literal["done", "enter", "go", "next", "previous", "search", "send"],
                Var[
                    Literal["done", "enter", "go", "next", "previous", "search", "send"]
                ],
            ]
        ] = None,
        hidden: Optional[Union[Var[bool], bool]] = None,
        input_mode: Optional[
            Union[
                Literal[
                    "decimal",
                    "email",
                    "none",
                    "numeric",
                    "search",
                    "tel",
                    "text",
                    "url",
                ],
                Var[
                    Literal[
                        "decimal",
                        "email",
                        "none",
                        "numeric",
                        "search",
                        "tel",
                        "text",
                        "url",
                    ]
                ],
            ]
        ] = None,
        item_prop: Optional[Union[Var[str], str]] = None,
        lang: Optional[Union[Var[str], str]] = None,
        role: Optional[
            Union[
                Literal[
                    "alert",
                    "alertdialog",
                    "application",
                    "article",
                    "banner",
                    "button",
                    "cell",
                    "checkbox",
                    "columnheader",
                    "combobox",
                    "complementary",
                    "contentinfo",
                    "definition",
                    "dialog",
                    "directory",
                    "document",
                    "feed",
                    "figure",
                    "form",
                    "grid",
                    "gridcell",
                    "group",
                    "heading",
                    "img",
                    "link",
                    "list",
                    "listbox",
                    "listitem",
                    "log",
                    "main",
                    "marquee",
                    "math",
                    "menu",
                    "menubar",
                    "menuitem",
                    "menuitemcheckbox",
                    "menuitemradio",
                    "navigation",
                    "none",
                    "note",
                    "option",
                    "presentation",
                    "progressbar",
                    "radio",
                    "radiogroup",
                    "region",
                    "row",
                    "rowgroup",
                    "rowheader",
                    "scrollbar",
                    "search",
                    "searchbox",
                    "separator",
                    "slider",
                    "spinbutton",
                    "status",
                    "switch",
                    "tab",
                    "table",
                    "tablist",
                    "tabpanel",
                    "term",
                    "textbox",
                    "timer",
                    "toolbar",
                    "tooltip",
                    "tree",
                    "treegrid",
                    "treeitem",
                ],
                Var[
                    Literal[
                        "alert",
                        "alertdialog",
                        "application",
                        "article",
                        "banner",
                        "button",
                        "cell",
                        "checkbox",
                        "columnheader",
                        "combobox",
                        "complementary",
                        "contentinfo",
                        "definition",
                        "dialog",
                        "directory",
                        "document",
                        "feed",
                        "figure",
                        "form",
                        "grid",
                        "gridcell",
                        "group",
                        "heading",
                        "img",
                        "link",
                        "list",
                        "listbox",
                        "listitem",
                        "log",
                        "main",
                        "marquee",
                        "math",
                        "menu",
                        "menubar",
                        "menuitem",
                        "menuitemcheckbox",
                        "menuitemradio",
                        "navigation",
                        "none",
                        "note",
                        "option",
                        "presentation",
                        "progressbar",
                        "radio",
                        "radiogroup",
                        "region",
                        "row",
                        "rowgroup",
                        "rowheader",
                        "scrollbar",
                        "search",
                        "searchbox",
                        "separator",
                        "slider",
                        "spinbutton",
                        "status",
                        "switch",
                        "tab",
                        "table",
                        "tablist",
                        "tabpanel",
                        "term",
                        "textbox",
                        "timer",
                        "toolbar",
                        "tooltip",
                        "tree",
                        "treegrid",
                        "treeitem",
                    ]
                ],
            ]
        ] = None,
        slot: Optional[Union[Var[str], str]] = None,
        spell_check: Optional[Union[Var[bool], bool]] = None,
        tab_index: Optional[Union[Var[int], int]] = None,
        title: Optional[Union[Var[str], str]] = None,
        style: Optional[Style] = None,
        key: Optional[Any] = None,
        id: Optional[Any] = None,
        class_name: Optional[Any] = None,
        autofocus: Optional[bool] = None,
        custom_attrs: Optional[Dict[str, Union[Var, Any]]] = None,
        on_blur: Optional[EventType[()]] = None,
        on_click: Optional[EventType[()]] = None,
        on_context_menu: Optional[EventType[()]] = None,
        on_double_click: Optional[EventType[()]] = None,
        on_focus: Optional[EventType[()]] = None,
        on_mount: Optional[EventType[()]] = None,
        on_mouse_down: Optional[EventType[()]] = None,
        on_mouse_enter: Optional[EventType[()]] = None,
        on_mouse_leave: Optional[EventType[()]] = None,
        on_mouse_move: Optional[EventType[()]] = None,
        on_mouse_out: Optional[EventType[()]] = None,
        on_mouse_over: Optional[EventType[()]] = None,
        on_mouse_up: Optional[EventType[()]] = None,
        on_scroll: Optional[EventType[()]] = None,
        on_unmount: Optional[EventType[()]] = None,
        **props,
    ) -> "Link":
        """Create the component.

        Args:
            *children: The children of the component.
            cross_origin: Specifies the CORS settings for the linked resource
            href: Specifies the URL of the linked document/resource
            href_lang: Specifies the language of the text in the linked document
            integrity: Allows a browser to check the fetched link for integrity
            media: Specifies on what device the linked document will be displayed
            referrer_policy: Specifies the referrer policy of the linked document
            rel: Specifies the relationship between the current document and the linked one
            sizes: Specifies the sizes of icons for visual media
            type: Specifies the MIME type of the linked document
            access_key: Provides a hint for generating a keyboard shortcut for the current element.
            auto_capitalize: Controls whether and how text input is automatically capitalized as it is entered/edited by the user.
            content_editable: Indicates whether the element's content is editable.
            context_menu: Defines the ID of a <menu> element which will serve as the element's context menu.
            dir: Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
            draggable: Defines whether the element can be dragged.
            enter_key_hint: Hints what media types the media element is able to play.
            hidden: Defines whether the element is hidden.
            input_mode: Defines the type of the element.
            item_prop: Defines the name of the element for metadata purposes.
            lang: Defines the language used in the element.
            role: Defines the role of the element.
            slot: Assigns a slot in a shadow DOM shadow tree to an element.
            spell_check: Defines whether the element may be checked for spelling errors.
            tab_index: Defines the position of the current element in the tabbing order.
            title: Defines a tooltip for the element.
            style: The style of the component.
            key: A unique key for the component.
            id: The id for the component.
            class_name: The class name for the component.
            autofocus: Whether the component should take the focus once the page is loaded
            custom_attrs: custom attribute
            **props: The props of the component.

        Returns:
            The component.
        """
        ...

class Meta(BaseHTML):
    @overload
    @classmethod
    def create(  # type: ignore
        cls,
        *children,
        char_set: Optional[Union[Var[str], str]] = None,
        content: Optional[Union[Var[str], str]] = None,
        http_equiv: Optional[Union[Var[str], str]] = None,
        name: Optional[Union[Var[str], str]] = None,
        access_key: Optional[Union[Var[str], str]] = None,
        auto_capitalize: Optional[
            Union[
                Literal["characters", "none", "off", "on", "sentences", "words"],
                Var[Literal["characters", "none", "off", "on", "sentences", "words"]],
            ]
        ] = None,
        content_editable: Optional[
            Union[
                Literal["inherit", "plaintext-only", False, True],
                Var[Literal["inherit", "plaintext-only", False, True]],
            ]
        ] = None,
        context_menu: Optional[Union[Var[str], str]] = None,
        dir: Optional[Union[Var[str], str]] = None,
        draggable: Optional[Union[Var[bool], bool]] = None,
        enter_key_hint: Optional[
            Union[
                Literal["done", "enter", "go", "next", "previous", "search", "send"],
                Var[
                    Literal["done", "enter", "go", "next", "previous", "search", "send"]
                ],
            ]
        ] = None,
        hidden: Optional[Union[Var[bool], bool]] = None,
        input_mode: Optional[
            Union[
                Literal[
                    "decimal",
                    "email",
                    "none",
                    "numeric",
                    "search",
                    "tel",
                    "text",
                    "url",
                ],
                Var[
                    Literal[
                        "decimal",
                        "email",
                        "none",
                        "numeric",
                        "search",
                        "tel",
                        "text",
                        "url",
                    ]
                ],
            ]
        ] = None,
        item_prop: Optional[Union[Var[str], str]] = None,
        lang: Optional[Union[Var[str], str]] = None,
        role: Optional[
            Union[
                Literal[
                    "alert",
                    "alertdialog",
                    "application",
                    "article",
                    "banner",
                    "button",
                    "cell",
                    "checkbox",
                    "columnheader",
                    "combobox",
                    "complementary",
                    "contentinfo",
                    "definition",
                    "dialog",
                    "directory",
                    "document",
                    "feed",
                    "figure",
                    "form",
                    "grid",
                    "gridcell",
                    "group",
                    "heading",
                    "img",
                    "link",
                    "list",
                    "listbox",
                    "listitem",
                    "log",
                    "main",
                    "marquee",
                    "math",
                    "menu",
                    "menubar",
                    "menuitem",
                    "menuitemcheckbox",
                    "menuitemradio",
                    "navigation",
                    "none",
                    "note",
                    "option",
                    "presentation",
                    "progressbar",
                    "radio",
                    "radiogroup",
                    "region",
                    "row",
                    "rowgroup",
                    "rowheader",
                    "scrollbar",
                    "search",
                    "searchbox",
                    "separator",
                    "slider",
                    "spinbutton",
                    "status",
                    "switch",
                    "tab",
                    "table",
                    "tablist",
                    "tabpanel",
                    "term",
                    "textbox",
                    "timer",
                    "toolbar",
                    "tooltip",
                    "tree",
                    "treegrid",
                    "treeitem",
                ],
                Var[
                    Literal[
                        "alert",
                        "alertdialog",
                        "application",
                        "article",
                        "banner",
                        "button",
                        "cell",
                        "checkbox",
                        "columnheader",
                        "combobox",
                        "complementary",
                        "contentinfo",
                        "definition",
                        "dialog",
                        "directory",
                        "document",
                        "feed",
                        "figure",
                        "form",
                        "grid",
                        "gridcell",
                        "group",
                        "heading",
                        "img",
                        "link",
                        "list",
                        "listbox",
                        "listitem",
                        "log",
                        "main",
                        "marquee",
                        "math",
                        "menu",
                        "menubar",
                        "menuitem",
                        "menuitemcheckbox",
                        "menuitemradio",
                        "navigation",
                        "none",
                        "note",
                        "option",
                        "presentation",
                        "progressbar",
                        "radio",
                        "radiogroup",
                        "region",
                        "row",
                        "rowgroup",
                        "rowheader",
                        "scrollbar",
                        "search",
                        "searchbox",
                        "separator",
                        "slider",
                        "spinbutton",
                        "status",
                        "switch",
                        "tab",
                        "table",
                        "tablist",
                        "tabpanel",
                        "term",
                        "textbox",
                        "timer",
                        "toolbar",
                        "tooltip",
                        "tree",
                        "treegrid",
                        "treeitem",
                    ]
                ],
            ]
        ] = None,
        slot: Optional[Union[Var[str], str]] = None,
        spell_check: Optional[Union[Var[bool], bool]] = None,
        tab_index: Optional[Union[Var[int], int]] = None,
        title: Optional[Union[Var[str], str]] = None,
        style: Optional[Style] = None,
        key: Optional[Any] = None,
        id: Optional[Any] = None,
        class_name: Optional[Any] = None,
        autofocus: Optional[bool] = None,
        custom_attrs: Optional[Dict[str, Union[Var, Any]]] = None,
        on_blur: Optional[EventType[()]] = None,
        on_click: Optional[EventType[()]] = None,
        on_context_menu: Optional[EventType[()]] = None,
        on_double_click: Optional[EventType[()]] = None,
        on_focus: Optional[EventType[()]] = None,
        on_mount: Optional[EventType[()]] = None,
        on_mouse_down: Optional[EventType[()]] = None,
        on_mouse_enter: Optional[EventType[()]] = None,
        on_mouse_leave: Optional[EventType[()]] = None,
        on_mouse_move: Optional[EventType[()]] = None,
        on_mouse_out: Optional[EventType[()]] = None,
        on_mouse_over: Optional[EventType[()]] = None,
        on_mouse_up: Optional[EventType[()]] = None,
        on_scroll: Optional[EventType[()]] = None,
        on_unmount: Optional[EventType[()]] = None,
        **props,
    ) -> "Meta":
        """Create the component.

        Args:
            *children: The children of the component.
            char_set: Specifies the character encoding for the HTML document
            content: Defines the content of the metadata
            http_equiv: Provides an HTTP header for the information/value of the content attribute
            name: Specifies a name for the metadata
            access_key: Provides a hint for generating a keyboard shortcut for the current element.
            auto_capitalize: Controls whether and how text input is automatically capitalized as it is entered/edited by the user.
            content_editable: Indicates whether the element's content is editable.
            context_menu: Defines the ID of a <menu> element which will serve as the element's context menu.
            dir: Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
            draggable: Defines whether the element can be dragged.
            enter_key_hint: Hints what media types the media element is able to play.
            hidden: Defines whether the element is hidden.
            input_mode: Defines the type of the element.
            item_prop: Defines the name of the element for metadata purposes.
            lang: Defines the language used in the element.
            role: Defines the role of the element.
            slot: Assigns a slot in a shadow DOM shadow tree to an element.
            spell_check: Defines whether the element may be checked for spelling errors.
            tab_index: Defines the position of the current element in the tabbing order.
            title: Defines a tooltip for the element.
            style: The style of the component.
            key: A unique key for the component.
            id: The id for the component.
            class_name: The class name for the component.
            autofocus: Whether the component should take the focus once the page is loaded
            custom_attrs: custom attribute
            **props: The props of the component.

        Returns:
            The component.
        """
        ...

class Title(Element):
    @overload
    @classmethod
    def create(  # type: ignore
        cls,
        *children,
        style: Optional[Style] = None,
        key: Optional[Any] = None,
        id: Optional[Any] = None,
        class_name: Optional[Any] = None,
        autofocus: Optional[bool] = None,
        custom_attrs: Optional[Dict[str, Union[Var, Any]]] = None,
        on_blur: Optional[EventType[()]] = None,
        on_click: Optional[EventType[()]] = None,
        on_context_menu: Optional[EventType[()]] = None,
        on_double_click: Optional[EventType[()]] = None,
        on_focus: Optional[EventType[()]] = None,
        on_mount: Optional[EventType[()]] = None,
        on_mouse_down: Optional[EventType[()]] = None,
        on_mouse_enter: Optional[EventType[()]] = None,
        on_mouse_leave: Optional[EventType[()]] = None,
        on_mouse_move: Optional[EventType[()]] = None,
        on_mouse_out: Optional[EventType[()]] = None,
        on_mouse_over: Optional[EventType[()]] = None,
        on_mouse_up: Optional[EventType[()]] = None,
        on_scroll: Optional[EventType[()]] = None,
        on_unmount: Optional[EventType[()]] = None,
        **props,
    ) -> "Title":
        """Create the component.

        Args:
            *children: The children of the component.
            style: The style of the component.
            key: A unique key for the component.
            id: The id for the component.
            class_name: The class name for the component.
            autofocus: Whether the component should take the focus once the page is loaded
            custom_attrs: custom attribute
            **props: The props of the component.

        Returns:
            The component.
        """
        ...

class StyleEl(Element):
    @overload
    @classmethod
    def create(  # type: ignore
        cls,
        *children,
        media: Optional[Union[Var[str], str]] = None,
        style: Optional[Style] = None,
        key: Optional[Any] = None,
        id: Optional[Any] = None,
        class_name: Optional[Any] = None,
        autofocus: Optional[bool] = None,
        custom_attrs: Optional[Dict[str, Union[Var, Any]]] = None,
        on_blur: Optional[EventType[()]] = None,
        on_click: Optional[EventType[()]] = None,
        on_context_menu: Optional[EventType[()]] = None,
        on_double_click: Optional[EventType[()]] = None,
        on_focus: Optional[EventType[()]] = None,
        on_mount: Optional[EventType[()]] = None,
        on_mouse_down: Optional[EventType[()]] = None,
        on_mouse_enter: Optional[EventType[()]] = None,
        on_mouse_leave: Optional[EventType[()]] = None,
        on_mouse_move: Optional[EventType[()]] = None,
        on_mouse_out: Optional[EventType[()]] = None,
        on_mouse_over: Optional[EventType[()]] = None,
        on_mouse_up: Optional[EventType[()]] = None,
        on_scroll: Optional[EventType[()]] = None,
        on_unmount: Optional[EventType[()]] = None,
        **props,
    ) -> "StyleEl":
        """Create the component.

        Args:
            *children: The children of the component.
            style: The style of the component.
            key: A unique key for the component.
            id: The id for the component.
            class_name: The class name for the component.
            autofocus: Whether the component should take the focus once the page is loaded
            custom_attrs: custom attribute
            **props: The props of the component.

        Returns:
            The component.
        """
        ...

base = Base.create
head = Head.create
link = Link.create
meta = Meta.create
title = Title.create
style = StyleEl.create
