[project]
name = "reflex"
version = "0.8.8a1"
description = "Web apps in pure Python."
license.text = "Apache-2.0"
authors = [
  { name = "Nikhil Rao", email = "nikhil@reflex.dev" },
  { name = "Alek Petuskey", email = "alek@reflex.dev" },
  { name = "Masen Furer", email = "masen@reflex.dev" },
  { name = "Elijah Ahianyo", email = "elijahahianyo@gmail.com" },
  { name = "Thomas Brandeho", email = "thomas@reflex.dev" },
  { name = "Khaleel Al-Adhami", email = "khaleel@reflex.dev" },
]
maintainers = [
  { name = "Masen Furer", email = "masen@reflex.dev" },
  { name = "Thomas Brandeho", email = "thomas@reflex.dev" },
  { name = "Khaleel Al-Adhami", email = "khaleel@reflex.dev" },
]
readme = "README.md"
keywords = ["web", "framework"]
requires-python = ">=3.10,<4.0"
dependencies = [
  "alembic >=1.15.2,<2.0",
  "click >=8.2",
  "granian[reload] >=2.4.0",
  "httpx >=0.23.3,<1.0",
  "packaging >=24.2,<26",
  "platformdirs >=4.3.7,<5.0",
  "psutil >=7.0.0,<8.0; sys_platform == 'win32'",
  "pydantic >=1.10.21,<3.0",
  "python-multipart >=0.0.20,<1.0",
  "python-socketio >=5.12.0,<6.0",
  "redis >=5.2.1,<7.0",
  "reflex-hosting-cli >=0.1.55",
  "rich >=13,<15",
  "sqlmodel >=0.0.24,<0.1",
  "starlette >=0.47.0",
  "typing_extensions >=4.13.0",
  "wrapt >=1.17.0,<2.0",
]

classifiers = [
  "Development Status :: 4 - Beta",
  "License :: OSI Approved :: Apache Software License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]

[project.optional-dependencies]
monitoring = [
  "pyleak >=0.1.14,<1.0",
]

[project.urls]
homepage = "https://reflex.dev"
repository = "https://github.com/reflex-dev/reflex"
documentation = "https://reflex.dev/docs/getting-started/introduction"

[project.scripts]
reflex = "reflex.reflex:cli"

[dependency-groups]
dev = [
  "asynctest",
  "darglint",
  "dill",
  "fastapi",
  "hatchling",
  "libsass",
  "numpy",
  "pandas",
  "pillow",
  "playwright",
  "plotly",
  "pre-commit",
  "psutil",
  "psycopg[binary]",
  "pyleak >=0.1.14,<1.0",
  "pyright",
  "pytest-asyncio",
  "pytest-benchmark",
  "pytest-codspeed",
  "pytest-cov",
  "pytest-mock",
  "pytest-playwright",
  "pytest-retry",
  "pytest-split",
  "pytest",
  "python-dotenv",
  "ruff",
  "selenium",
  "starlette-admin",
  "toml",
  "uvicorn",
]


[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build]
include = ["reflex", "scripts/hatch_build.py"]
targets.sdist.artifacts = ["*.pyi"]
targets.wheel.artifacts = ["*.pyi"]

[tool.hatch.build.hooks.custom]
path = "scripts/hatch_build.py"
dependencies = ["plotly", "ruff", "pre_commit", "toml"]
require-runtime-dependencies = true

[tool.pyright]
reportIncompatibleMethodOverride = false

[tool.ruff]
target-version = "py310"
output-format = "concise"
lint.isort.split-on-trailing-comma = false
lint.select = ["ALL"]
lint.ignore = [
  "A",
  "ANN002",
  "ANN003",
  "ANN2",
  "ANN4",
  "ARG",
  "BLE",
  "C901",
  "COM",
  "D205",
  "DTZ",
  "E501",
  "F403",
  "FBT",
  "FIX",
  "G004",
  "ISC003",
  "PLC",
  "PLR",
  "PLW",
  "PT011",
  "PT012",
  "PYI",
  "RUF012",
  "S",
  "SLF",
  "SLOT",
  "TC",
  "TD",
  "TRY0",
  "UP038",
]
lint.pydocstyle.convention = "google"
lint.flake8-bugbear.extend-immutable-calls = [
  "reflex.utils.types.Unset",
  "reflex.vars.base.Var.create",
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*.py" = [
  "ANN001",
  "D100",
  "D103",
  "D104",
  "INP",
  "B018",
  "PERF",
  "T",
  "N",
]
"benchmarks/*.py" = ["ANN001", "D100", "D103", "D104", "B018", "PERF", "T", "N"]
"reflex/.templates/*.py" = ["D100", "D103", "D104"]
"*.pyi" = ["D301", "D415", "D417", "D418", "E742", "N", "PGH"]
"pyi_generator.py" = ["N802"]
"reflex/constants/*.py" = ["N"]
"*/blank.py" = ["I001"]

[tool.pytest.ini_options]
filterwarnings = "ignore:fields may not start with an underscore:RuntimeWarning"
asyncio_default_fixture_loop_scope = "function"
asyncio_mode = "auto"

[tool.codespell]
skip = "docs/*,*.html,examples/*, *.pyi, poetry.lock, uv.lock"
ignore-words-list = "te, TreeE"


[tool.coverage.run]
source = ["reflex"]
branch = true
omit = [
  "*/pyi_generator.py",
  "reflex/__main__.py",
  "reflex/app_module_for_backend.py",
  "reflex/components/chakra/*",
  "reflex/experimental/*",
]

[tool.coverage.report]
show_missing = true
# TODO bump back to 79
fail_under = 70
precision = 2
ignore_errors = true

exclude_also = [
  "def __repr__",
  # Don't complain about missing debug-only code:
  "if self.debug",
  # Don't complain if tests don't hit defensive assertion code:
  "raise AssertionError",
  "raise NotImplementedError",
  # Regexes for lines to exclude from consideration
  "if 0:",
  # Don't complain if non-runnable code isn't run:
  "if __name__ == .__main__.:",
  # Don't complain about abstract methods, they aren't run:
  "@(abc.)?abstractmethod",
  # Don't complain about overloaded methods:
  "@overload",
]

[tool.coverage.html]
directory = "coverage_html_report"

[tool.pre-commit]
fail_fast = true

[[tool.pre-commit.repos]]
repo = "https://github.com/astral-sh/ruff-pre-commit"
rev = "v0.12.9"
hooks = [
  { id = "ruff-format", args = [
    "reflex",
    "tests",
  ] },
  { id = "ruff-check", args = [
    "--fix",
    "--exit-non-zero-on-fix",
  ], exclude = "^integration/benchmarks/" },
]

[[tool.pre-commit.repos]]
repo = "https://github.com/codespell-project/codespell"
rev = "v2.4.1"
hooks = [
  { id = "codespell", args = [
    "reflex",
  ], additional_dependencies = [
    "tomli",
  ] },
]

# Run pyi check before pyright because pyright can fail if pyi files are wrong.
[[tool.pre-commit.repos]]
repo = "local"
hooks = [
  { id = "update-pyi-files", name = "update-pyi-files", always_run = true, language = "system", require_serial = true, description = "Update pyi files as needed", entry = "python3 scripts/make_pyi.py" },
]

[[tool.pre-commit.repos]]
repo = "https://github.com/RobertCraigie/pyright-python"
rev = "v1.1.403"
hooks = [{ id = "pyright", args = ["reflex", "tests"], language = "system" }]

[[tool.pre-commit.repos]]
repo = "https://github.com/terrencepreilly/darglint"
rev = "v1.8.1"
hooks = [{ id = "darglint", exclude = "^reflex/reflex.py" }]

[[tool.pre-commit.repos]]
repo = "https://github.com/pre-commit/mirrors-prettier"
rev = "f62a70a3a7114896b062de517d72829ea1c884b6"
hooks = [{ id = "prettier", require_serial = true }]

[tool.uv]
required-version = ">=0.7.0"
